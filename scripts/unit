#!/usr/bin/env bash
source $(dirname "$0")/helpers/logging.sh
KEEP_ENV_UP="${KEEP_ENV_UP:-false}"
PERSISTENCE_SERVICE=dynamodb
REBUILD_UNIT_IMAGE="${REBUILD_UNIT_IMAGE:-false}"
VERBOSE="${VERBOSE:-false}"

_rebuild_unit_image_anyway() {
  test "${REBUILD_UNIT_IMAGE,,}" == 'true'
}

_source_code_changes_detected() {
  git status --porcelain | awk '{print $2}' | grep -Eq '^(tests|tripit|Dockerfile)'
}

_requirements_txt_change_detected() {
  git status --porcelain | awk '{print $2}' | grep -Eq ".*requirements.txt$"
}

# TODO: Move vendoring stuff into separate helper library.
vendor_dependencies() {
  if ! test -d "./vendor" || _requirements_txt_change_detected
  then
    info "Updating app dependencies."
    test -d "./vendor" || mkdir "./vendor"
    docker-compose run --rm vendor
  fi
}

start_mock_persistence() {
  info "Starting mock persistence."
  docker-compose up -d "$PERSISTENCE_SERVICE"
}

stop_persistence_if_running() {
  docker-compose stop "$PERSISTENCE_SERVICE"
}

update_app_into_unit_testing_service() {
  if _source_code_changes_detected || _rebuild_unit_image_anyway
  then
    info "App changes detected or unit image rebuild requested. Rebuilding unit Docker service."
    docker-compose build unit || exit 1
  fi
}

teardown() {
  if [ "${KEEP_ENV_UP}" == "true" ]
  then
     info "Unit test services are still running. Run 'docker-compose down' to stop them."
  else
     docker-compose down
  fi
}

run_unit_tests() {
  if test "${VERBOSE,,}" == true
  then docker-compose run --rm unit-verbose
  else docker-compose run --rm unit
  fi
}


stop_persistence_if_running &&
  vendor_dependencies &&
  start_mock_persistence &&
  update_app_into_unit_testing_service &&
  run_unit_tests
teardown
