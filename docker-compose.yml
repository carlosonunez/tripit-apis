version: '2.2'
services:
  selenium:
    image: selenium/standalone-chrome-debug
    environment:
      ENVIRONMENT: test
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - 4444:4444
      - 5900:5900
  serverless:
    build:
      dockerfile: serverless.Dockerfile
      context: .
    environment:
      ENVIRONMENT: test
    env_file: .env
    volumes:
      - $PWD:/app
    working_dir: /app
  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - 8000:8000
  python:
    build:
      context: .
    env_file: .env
    environment:
      PIP_NO_CACHE_DIR: "off"
      PYTHONDONTWRITEBYTECODE: 1 # disable generating __pycache__ directories.
    volumes:
      - $PWD:/app:ro,delegated
    working_dir: /app
    entrypoint: sh
    command:
      - "-c"
      - "echo not meant to be run with the stack"
  vendor:
    build:
      context: .
      args:
        IS_FOR_VENDORING_SERVICE: "true"
    env_file: .env
    entrypoint: pip
    volumes:
      - "$PWD:/app:cached"
      - "$PWD/vendor:/vendor:cached"
      - "$PWD/requirements.txt:/requirements.txt"
    command:
      - download
      - -r
      - /requirements.txt
      - -d
      - /vendor
  lint:
    extends: python
    entrypoint: pylint
    volumes:
      - "$PWD:/app:cached"
    command:
      - -E
  unit:
    depends_on:
      - dynamodb
    extends: python
    entrypoint: pytest
    environment:
      TRIPIT_APP_CLIENT_ID: fake-client-id
      TRIPIT_APP_CLIENT_SECRET: fake-client-secret
      AWS_DYNAMODB_ENDPOINT_URL: http://dynamodb:8000
    volumes:
      - "$PWD:/app:cached"
    command:
      - --maxfail=1
      - -s
      - -m
      - unit
      - /app/tests
  unit-verbose:
    depends_on:
      - dynamodb
    extends: python
    entrypoint: pytest
    environment:
      TRIPIT_APP_CLIENT_ID: fake-client-id
      TRIPIT_APP_CLIENT_SECRET: fake-client-secret
      AWS_DYNAMODB_ENDPOINT_URL: http://dynamodb:8000
      LOG_LEVEL: debug
    volumes:
      - "$PWD:/app:cached"
    command:
      - -m
      - unit
      - /app/tests
      - -vv
  integration:
    depends_on:
      - dynamodb
    extends: python
    entrypoint: pytest
    environment:
      TRIPIT_APP_CLIENT_ID: fake-client-id
      TRIPIT_APP_CLIENT_SECRET: fake-client-secret
      AWS_DYNAMODB_ENDPOINT_URL: http://dynamodb:8000
      DISABLE_TRIPIT_CALLBACK_UPDATING: "true"
    volumes:
      - "$PWD:/app:cached"
      - "$PWD/secrets:/secrets:cached"
    command:
      - --maxfail=1
      - -s
      - -m
      - integration
      - /app/tests
  integration-setup:
   extends: serverless
   entrypoint: bash
   environment:
     ENVIRONMENT: test
   command:
     - -c
     - ./scripts/integration_setup.sh
  integration-teardown:
    extends: serverless
    entrypoint: bash
    environment:
      ENVIRONMENT: test
    command:
      - -c
      - ./scripts/integration_teardown.sh
